<?phpnamespace App;use Carbon\Carbon;use Illuminate\Database\Eloquent\Model;use Illuminate\Support\Facades\Auth;class Post extends Model{    protected $fillable = [        'title', 'path', 'description', 'content', 'image','icon', 'is_active', 'post_type', 'user_id', 'seo_id', 'category_item_id'    ];    public function users()    {        return $this->belongsTo('App\User', 'user_id');    }    public function categoryitems($type)    {        return $this->belongsToMany('App\CategoryItem', 'category_many', 'item_id', 'category_id')->withPivot('type')->wherePivot('type',$type)->withTimestamps();    }    public function seos(){        return $this->belongsTo('App\Seo','seo_id');    }    public function prepareParameters($parameters)    {        $parameters->request->add(['path' => '']);        $parameters->request->add(['user_id' => Auth::user()->id]);        if (!$parameters->input('is_active')) {            $parameters->request->add(['is_active' => null]);        }        return $parameters;    }    public function getPostByPath($path){        return $this->where('path',$path)->first();    }    public function getPostById($id){        return $this->where('id',$id)->first();    }    public function setImageAttribute($value)    {        if ($value) {            $this->attributes['image'] = substr($value, strpos($value, 'images'), strlen($value) - 1);        } else            $this->attributes['image'] = null;    }    public function setIsActiveAttribute($value)    {        if (!IsNullOrEmptyString($value)) {            $this->attributes['is_active'] = 1;        } else {            $this->attributes['is_active'] = 0;        }    }    public function setDescriptionAttribute($value)    {        if (!IsNullOrEmptyString($value)) {            $this->attributes['description'] = $value;        } else {            $this->attributes['description'] = null;        }    }    public function setPathAttribute($value)    {        if (IsNullOrEmptyString($value))            $this->attributes['path'] = chuyen_chuoi_thanh_path($this->title);    }    public function getCreatedAtAttribute($date)    {        return Carbon::createFromFormat('Y-m-d H:i:s', $date)->format('d-m-Y');    }    public function searchAllPost($request){        $searchKey=$request->input('search-key');        return $this->whereRaw('lower(title) like "%'.strtolower(vn_str_co_dau_thanh_khong_dau($searchKey)).'%"')->orWhereRaw('lower(content) like "%'.strtolower(vn_str_co_dau_thanh_khong_dau($searchKey)).'%"')->where('post_type','<>',0)->get();    }    protected static function boot() {        parent::boot();        static::deleting(function($post) { // before delete() method call this            $post->seos->delete();        });    }}